{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","serviceWorker.js","index.js"],"names":["Card","props","className","alt","src","project","url","key","id","name","language","href","site","CardList","projects","reverse","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","this","filteredMonsters","filter","toLowerCase","includes","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+SAGaA,G,YAAO,SAAAC,GAAK,OACrB,yBAAKC,UAAU,kBACX,yBAAKA,UAAU,SACX,yBAAKC,IAAI,UAAUC,IAAKH,EAAMI,QAAQC,OAE1C,wBAAIC,IAAKN,EAAMI,QAAQG,IAAvB,IAA6BP,EAAMI,QAAQI,KAA3C,KACA,2BAAIR,EAAMI,QAAQK,UAClB,2BAAG,uBAAGC,KAAMV,EAAMI,QAAQO,MAAvB,qBCNEC,EAAW,SAAAZ,GAAK,OACzB,yBAAKC,UAAU,aACVD,EAAMa,SAASC,UAAUC,KAAI,SAAAX,GAAO,OACjC,kBAAC,EAAD,CAAME,IAAI,aAAaF,QAASA,SCJ/BY,G,YAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,2BAAOjB,UAAU,SAASkB,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MC+FjEG,E,kDA7Fb,aAAc,IAAD,8BACX,gBAsEFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAtEtC,EAAKC,MAAQ,CACXd,SAAU,CACR,CACEL,KAAM,cACND,GAAI,MACJE,SAAU,yDACVE,KAAK,eACLN,IAAI,0IAEN,CACEG,KAAM,iBACND,GAAI,MACJE,SAAU,8CACVE,KAAK,WACLN,IAAI,0GAEN,CACEG,KAAM,iBACND,GAAI,MACJE,SAAU,yDACVE,KAAK,YACLN,IAAI,iGAEN,CACEG,KAAM,cACND,GAAI,MACJE,SAAU,sBACVE,KAAK,uCACLN,IAAI,+NAEN,CACEG,KAAM,WACND,GAAI,MACJE,SAAU,mCACVE,KAAK,QACLN,IAAI,uEAEN,CACEG,KAAM,YACND,GAAI,MACJE,SAAU,oCACVE,KAAK,aACLN,IAAI,4GAEN,CACEG,KAAM,UACND,GAAI,MACJE,SAAU,8BACVE,KAAK,+CACLN,IAAI,wKAEN,CACEG,KAAM,gBACND,GAAI,MACJE,SAAU,4DACVE,KAAK,yBACLN,IAAI,0GAEN,CACEG,KAAM,YACND,GAAI,MACJE,SAAU,kDACVE,KAAK,uBACLN,IAAI,kHAGRmB,YAAa,IApEJ,E,qDA0EJ,IAAD,EAC0BI,KAAKD,MAA9Bd,EADD,EACCA,SAAUW,EADX,EACWA,YACXK,EAAmBhB,EAASiB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQI,KAAKuB,cAAcC,SAASR,EAAYO,kBAGlD,OACE,yBAAK9B,UAAU,OACb,wBAAIA,UAAU,SAAd,eACA,kBAAC,EAAD,CACEgB,YAAc,kBACdC,aAAgBU,KAAKV,eAEvB,kBAAC,EAAD,CAAUL,SAAUgB,S,GAxFVI,IAAMC,WCOJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.72c080a2.chunk.js","sourcesContent":["import React from 'react';\nimport './card.component.css'\n\nexport const Card = props => (\n    <div className='card-container'>\n        <div className=\"image\">\n            <img alt='project' src={props.project.url}></img>\n        </div>\n        <h1 key={props.project.id}> {props.project.name} </h1>\n        <p>{props.project.language}</p>\n        <p><a href={props.project.site}>Check it out!</a></p>\n    </div>\n);","import React from 'react';\nimport './card-list.component.css';\nimport {Card} from '../card/card.component';\n\nexport const CardList = props => (\n    <div className='card-list'>\n        {props.projects.reverse().map(project => (\n            <Card key=\"project.id\" project={project} />\n        ))}\n    </div>\n);","import React from 'react';\nimport './search-box.component.css';\n\nexport const SearchBox = ({placeholder, handleChange}) => (\n    <input className='search' type='search' placeholder={placeholder} onChange={handleChange} />\n);","import React from 'react';\nimport {CardList} from './components/card-list/card-list.component'\nimport './App.css';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      projects: [\n        {\n          name: 'Corona Test',\n          id: 'pr1',\n          language: 'Tells you your chances of being infected from covid19.',\n          site: `/amiinfected`,\n          url: `https://images.pexels.com/photos/4031867/pexels-photo-4031867.jpeg?cs=srgb&dl=concept-of-covid-19-in-red-background-4031867.jpg&fm=jpg`\n        },\n        {\n          name: 'Simple Weather',\n          id: 'pr2',\n          language: 'Displays weather in a minimallistic manner.',\n          site: `/weather`,\n          url: `https://images.pexels.com/photos/125510/pexels-photo-125510.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500`\n        },\n        {\n          name: 'Router Library',\n          id: 'pr3',\n          language: 'Router library that handles SPA routing in vanilla JS.',\n          site: `/routerjs`,\n          url: `https://moduscreate.com/wp-content/uploads/2018/04/extjs-react-how-to-configure-routes-00.jpg`\n        },\n        {\n          name: 'Flappy Bird',\n          id: 'pr4',\n          language: 'flappy bird pygame.',\n          site: `https://github.com/RohanLodhi/flappy`,\n          url: `https://www.gannett-cdn.com/-mm-/26950e92aa73a383259467887fe6ca0c4ab636b2/c=0-758-1536-1623/local/-/media/Indianapolis/Indianapolis/2014/02/08//1391895756000-photo.PNG?width=660&height=372&fit=crop&format=pjpg&auto=webp`\n        },\n        {\n          name: 'ToDo pwa',\n          id: 'pr5',\n          language: 'Simple and easy to use todo app.',\n          site: `/todo`,\n          url: `http://icon-library.com/images/todo-list-icon/todo-list-icon-20.jpg`\n        },\n        {\n          name: 'Portfolio',\n          id: 'pr6',\n          language: 'Clean and nice portfolio website.',\n          site: `/portfolio`,\n          url: `https://images.pexels.com/photos/2442888/pexels-photo-2442888.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500`\n        },\n        {\n          name: 'Hangman',\n          id: 'pr7',\n          language: 'Hangman game in py and c++.',\n          site: `https://github.com/RohanLodhi/hangman-school`,\n          url: `https://media.istockphoto.com/photos/hangman-sketched-on-blackboard-picture-id466313780?k=6&m=466313780&s=612x612&w=0&h=Wpx_vgPCyt3oEJ5CIAhHxVfWlqdRfXrAfsHX4MbPfe8=`\n        },\n        {\n          name: 'Sudoku solver',\n          id: 'pr8',\n          language: 'Sudoku solver that uses back tracking algorithm to solve.',\n          site: `https://devx.tk/sudoku`,\n          url: `https://images.pexels.com/photos/207580/pexels-photo-207580.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500`\n        },\n        {\n          name: 'Reactango',\n          id: 'pr9',\n          language: 'Coding challenges website for a discord server.',\n          site: `https://reactango.tk`,\n          url: `https://images.pexels.com/photos/260024/pexels-photo-260024.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260`\n        }\n      ],\n      searchField: ''\n    };\n  }\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n  render(){\n    const {projects, searchField} = this.state;\n    const filteredMonsters = projects.filter(project =>(\n      project.name.toLowerCase().includes(searchField.toLowerCase())\n    ));\n\n    return (\n      <div className=\"App\">\n        <h1 className='title'>MY PROJECTS</h1>\n        <SearchBox \n          placeholder = 'search projects'\n          handleChange = {this.handleChange}\n        />\n        <CardList projects={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}